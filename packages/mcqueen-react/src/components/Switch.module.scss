.switch {
  position: relative;
  display: flex;

  &VerticalAlignTop {
    align-items: flex-start;
  }

  &VerticalAlignCenter {
    align-items: center;
  }
}

.switchCheckedIcon{
  display: none;
}

.input {
  position: absolute;
  opacity: 0;
  z-index: -1;
  width: 1px;
  height: 1px;

  &:focus ~ .switchContainer {
    box-shadow: 0 0 0px 4px theme("colors.gray.300");
  }
}

$switchHeight: 22px;

.switchContainer {
  width: 40px;
  height: $switchHeight;
  border-radius: 99px;
  border-width: 2px;
  border-style: solid;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex: none;
  box-sizing: content-box;

  // Margin that makes the input appear decently aligned against
  // various Thumbprint <Text> sizes
  .switchVerticalAlignTop & {
    margin-top: 1px;
  }

  &State{
    &Error{
      background-color: theme('colors.red.default');
      border-color: theme('colors.red.default');
    }
  }
}

.switchCircle {
  width: $switchHeight;
  height: $switchHeight;
  border-radius: 99px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: none;
}

.text {
  // This must take up the remaining available space for content that must be right-aligned.
  flex: 1 0 0%;
  // 'min-width' is needed to allow text within the toggle to truncate.
  min-width: 0;
  font-size: theme("fontSize.body-2");
  font-weight: 400;
  padding-left: 8px;
  color: inherit;

  &State{
    &Error{
      color: theme('colors.red.default');
    }
  }
}

.input:not(:checked){
  & ~ .switchContainer{
    background-color: theme('colors.gray.default');
    border-color: theme('colors.gray.default');

    .switchCircle{
      color: theme('colors.gray.default');
      background-color: theme('colors.white');
    }

    &State{
      &Error{
        border-color: theme('colors.red.default');
        background-color: theme('colors.red.default');

        .switchCircle{
          color: theme('colors.red.default');
          background-color: theme('colors.white');
        }
      }
    }
  }
}

.input:checked{
  & ~ .switchContainer{
    justify-content: flex-end;
    background-color: theme('colors.blue.default');
    border-color: theme('colors.blue.default');

    .switchCircle{
      color: theme('colors.blue.default');
      background-color: theme('colors.white');

      .switchCheckedIcon{
        display: block;
      }
    }

    &State{
      &Error{
        border-color: theme('colors.red.default');
        background-color: theme('colors.red.default');

        .switchCircle{
          color: theme('colors.red.default');
          background-color: theme('colors.white');
        }
      }
    }
  }
}

.input:disabled{
  & ~ .switchContainer{
    background-color: theme('colors.gray.default')!important;
    border-color: theme('colors.gray.default')!important;

    .switchCircle{
      color: theme('colors.gray.default')!important;
      background-color: #99ACC2!important;
    }
  }

  & ~ .text{
    color: #7C98B6!important;
  }
}
